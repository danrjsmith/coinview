{"version":3,"file":"index.native.umd.js","sources":["../src/native/index.ts"],"sourcesContent":["import {\n  ComponentType,\n  Context as ContextOrig,\n  FC,\n  MutableRefObject,\n  Provider,\n  createElement,\n  createContext as createContextOrig,\n  useContext as useContextOrig,\n  useEffect,\n  useLayoutEffect,\n  useReducer,\n  useRef,\n} from 'react';\nimport {\n  unstable_NormalPriority as NormalPriority,\n  unstable_runWithPriority as runWithPriority,\n} from 'scheduler';\n\nimport { batchedUpdates } from './batchedUpdates';\n\nconst CONTEXT_VALUE = Symbol();\nconst ORIGINAL_PROVIDER = Symbol();\n\nconst isSSR = typeof window === 'undefined'\n  || /ServerSideRendering/.test(window.navigator && window.navigator.userAgent);\n\nconst useIsomorphicLayoutEffect = isSSR ? useEffect : useLayoutEffect;\n\ntype ContextValue<Value> = {\n  [CONTEXT_VALUE]: {\n    /* \"v\"alue     */ v: MutableRefObject<Value>;\n    /* versio\"n\"   */ n: MutableRefObject<number>;\n    /* \"l\"isteners */ l: Set<(action: [number] | [number, Value]) => void>;\n    /* \"u\"pdate    */ u: <T>(thunk: () => T) => void;\n  };\n};\n\nexport interface Context<Value> {\n  Provider: ComponentType<{ value: Value }>;\n  displayName?: string;\n}\n\nconst createProvider = <Value>(\n  ProviderOrig: Provider<ContextValue<Value>>,\n): FC<{ value: Value }> => ({ value, children }) => {\n    const valueRef = useRef(value);\n    const versionRef = useRef(0);\n    const contextValue = useRef<ContextValue<Value>>();\n    if (!contextValue.current) {\n      const listeners = new Set<(action: [number] | [number, Value]) => void>();\n      const update = (thunk: () => void) => {\n        batchedUpdates(() => {\n          versionRef.current += 1;\n          listeners.forEach((listener) => listener([versionRef.current]));\n          thunk();\n        });\n      };\n      contextValue.current = {\n        [CONTEXT_VALUE]: {\n          /* \"v\"alue     */ v: valueRef,\n          /* versio\"n\"   */ n: versionRef,\n          /* \"l\"isteners */ l: listeners,\n          /* \"u\"pdate    */ u: update,\n        },\n      };\n    }\n    useIsomorphicLayoutEffect(() => {\n      valueRef.current = value;\n      versionRef.current += 1;\n      runWithPriority(NormalPriority, () => {\n        (contextValue.current as ContextValue<Value>)[CONTEXT_VALUE].l.forEach((listener) => {\n          listener([versionRef.current, value]);\n        });\n      });\n    }, [value]);\n    return createElement(ProviderOrig, { value: contextValue.current }, children);\n  };\n\nconst identity = <T>(x: T) => x;\n\n/**\n * This creates a special context for `useContextSelector`.\n *\n * @example\n * import { createContext } from 'use-context-selector';\n *\n * const PersonContext = createContext({ firstName: '', familyName: '' });\n */\nexport function createContext<Value>(defaultValue: Value) {\n  const context = createContextOrig<ContextValue<Value>>({\n    [CONTEXT_VALUE]: {\n      /* \"v\"alue     */ v: { current: defaultValue },\n      /* versio\"n\"   */ n: { current: -1 },\n      /* \"l\"isteners */ l: new Set(),\n      /* \"u\"pdate    */ u: (f) => f(),\n    },\n  });\n  (context as unknown as {\n    [ORIGINAL_PROVIDER]: Provider<ContextValue<Value>>;\n  })[ORIGINAL_PROVIDER] = context.Provider;\n  (context as unknown as Context<Value>).Provider = createProvider(context.Provider);\n  delete (context as any).Consumer; // no support for Consumer\n  return context as unknown as Context<Value>;\n}\n\n/**\n * This hook returns context selected value by selector.\n *\n * It will only accept context created by `createContext`.\n * It will trigger re-render if only the selected value is referentially changed.\n *\n * The selector should return referentially equal result for same input for better performance.\n *\n * @example\n * import { useContextSelector } from 'use-context-selector';\n *\n * const firstName = useContextSelector(PersonContext, state => state.firstName);\n */\nexport function useContextSelector<Value, Selected>(\n  context: Context<Value>,\n  selector: (value: Value) => Selected,\n) {\n  const contextValue = useContextOrig(\n    context as unknown as ContextOrig<ContextValue<Value>>,\n  )[CONTEXT_VALUE];\n  if (typeof process === 'object' && process.env.NODE_ENV !== 'production') {\n    if (!contextValue) {\n      throw new Error('useContextSelector requires special context');\n    }\n  }\n  const {\n    /* \"v\"alue     */ v: { current: value },\n    /* versio\"n\"   */ n: { current: version },\n    /* \"l\"isteners */ l: listeners,\n  } = contextValue;\n  const selected = selector(value);\n  const [state, dispatch] = useReducer((\n    prev: { value: Value; selected: Selected },\n    next: [number] | [number, Value],\n  ) => {\n    if (version < next[0]) {\n      try {\n        if (next.length === 2 && (\n          Object.is(prev.value, next[1]) || Object.is(prev.selected, selector(next[1])))\n        ) {\n          return prev; // do not update\n        }\n      } catch (e) {\n        // ignored (stale props or some other reason)\n      }\n      return { ...prev }; // schedule update\n    }\n    if (Object.is(prev.value, value) || Object.is(prev.selected, selected)) {\n      return prev; // bail out\n    }\n    return { value, selected };\n  }, { value, selected });\n  useIsomorphicLayoutEffect(() => {\n    listeners.add(dispatch);\n    return () => {\n      listeners.delete(dispatch);\n    };\n  }, [listeners]);\n  return state.selected;\n}\n\n/**\n * This hook returns the entire context value.\n * Use this instead of React.useContext for consistent behavior.\n *\n * @example\n * import { useContext } from 'use-context-selector';\n *\n * const person = useContext(PersonContext);\n */\nexport function useContext<Value>(context: Context<Value>) {\n  return useContextSelector(context, identity);\n}\n\n/**\n * This hook returns an update function that accepts a thunk function\n *\n * Use this for a function that will change a value.\n *\n * @example\n * import { useContextUpdate } from 'use-context-selector';\n *\n * const update = useContextUpdate();\n * update(() => setState(...));\n */\nexport function useContextUpdate<Value>(context: Context<Value>) {\n  const contextValue = useContextOrig(\n    context as unknown as ContextOrig<ContextValue<Value>>,\n  )[CONTEXT_VALUE];\n  if (typeof process === 'object' && process.env.NODE_ENV !== 'production') {\n    if (!contextValue) {\n      throw new Error('useContextUpdate requires special context');\n    }\n  }\n  const { u: update } = contextValue;\n  return update;\n}\n\n/**\n * This is a Provider component for bridging multiple react roots\n *\n * @example\n * const valueToBridge = useBridgeValue(PersonContext);\n * return (\n *   <Renderer>\n *     <BridgeProvider context={PersonContext} value={valueToBridge}>\n *       {children}\n *     </BridgeProvider>\n *   </Renderer>\n * );\n */\nexport const BridgeProvider: FC<{\n  context: Context<any>;\n  value: any;\n}> = ({ context, value, children }) => {\n  const { [ORIGINAL_PROVIDER]: ProviderOrig } = context as unknown as {\n    [ORIGINAL_PROVIDER]: Provider<unknown>;\n  };\n  if (typeof process === 'object' && process.env.NODE_ENV !== 'production') {\n    if (!ProviderOrig) {\n      throw new Error('BridgeProvider requires special context');\n    }\n  }\n  return createElement(ProviderOrig, { value }, children);\n};\n\n/**\n * This hook return a value for BridgeProvider\n */\nexport const useBridgeValue = (context: Context<any>) => {\n  const bridgeValue = useContextOrig(context as unknown as ContextOrig<ContextValue<unknown>>);\n  if (typeof process === 'object' && process.env.NODE_ENV !== 'production') {\n    if (!bridgeValue[CONTEXT_VALUE]) {\n      throw new Error('useBridgeValue requires special context');\n    }\n  }\n  return bridgeValue as any;\n};\n"],"names":["CONTEXT_VALUE","Symbol","ORIGINAL_PROVIDER","useIsomorphicLayoutEffect","window","test","navigator","userAgent","useEffect","useLayoutEffect","identity","x","useContextSelector","context","selector","contextValue","useContextOrig","process","env","NODE_ENV","Error","value","v","current","version","n","listeners","l","selected","useReducer","prev","next","length","Object","is","e","state","dispatch","add","children","ProviderOrig","createElement","defaultValue","createContextOrig","Set","u","f","Provider","valueRef","useRef","versionRef","thunk","batchedUpdates","forEach","listener","runWithPriority","NormalPriority","Consumer","bridgeValue"],"mappings":"0hBAqBA,IAAMA,EAAgBC,SAChBC,EAAoBD,SAKpBE,EAH0B,oBAAXC,QAChB,sBAAsBC,KAAKD,OAAOE,WAAaF,OAAOE,UAAUC,WAE3BC,YAAYC,kBAoDhDC,EAAW,SAAIC,UAASA,YAwCdC,EACdC,EACAC,GAEA,IAAMC,EAAeC,aACnBH,GACAb,GACF,GAAuB,iBAAZiB,SAAiD,eAAzBA,QAAQC,IAAIC,WACxCJ,EACH,UAAUK,MAAM,mDAIcC,EAG9BN,EAHgBO,EAAKC,QACSC,EAE9BT,EAFgBU,EAAKF,QACFG,EACnBX,EADgBY,EAEdC,EAAWd,EAASO,KACAQ,aAAW,SACnCC,EACAC,GAEA,GAAIP,EAAUO,EAAK,GAAI,CACrB,IACE,GAAoB,IAAhBA,EAAKC,SACPC,OAAOC,GAAGJ,EAAKT,MAAOU,EAAK,KAAOE,OAAOC,GAAGJ,EAAKF,SAAUd,EAASiB,EAAK,MAEzE,OAAOD,EAET,MAAOK,IAGT,YAAYL,GAEd,OAAIG,OAAOC,GAAGJ,EAAKT,MAAOA,IAAUY,OAAOC,GAAGJ,EAAKF,SAAUA,GACpDE,EAEF,CAAET,MAAAA,EAAOO,SAAAA,IACf,CAAEP,MAAAA,EAAOO,SAAAA,IApBLQ,OAAOC,OA2Bd,OANAlC,EAA0B,WAExB,OADAuB,EAAUY,IAAID,cAEZX,SAAiBW,KAElB,CAACX,IACGU,EAAMR,0BAwDV,gBAAYP,IAAAA,MAAOkB,IAAAA,SACOC,IADvB3B,QACGX,GAGT,GAAuB,iBAAZe,SAAiD,eAAzBA,QAAQC,IAAIC,WACxCqB,EACH,UAAUpB,MAAM,2CAGpB,OAAOqB,gBAAcD,EAAc,CAAEnB,MAAAA,GAASkB,6BA5IXG,SA7CnCF,EA8CM3B,EAAU8B,wBACb3C,GAAgB,CACGsB,EAAG,CAAEC,QAASmB,GACdjB,EAAG,CAAEF,SAAU,GACfI,EAAG,IAAIiB,IACPC,EAAG,SAACC,UAAMA,UAQhC,OALCjC,EAEEX,GAAqBW,EAAQkC,SAC/BlC,EAAsCkC,UAzDvCP,EAyDiE3B,EAAQkC,yBAxD7C1B,IAAAA,MAAOkB,IAAAA,SAC3BS,EAAWC,SAAO5B,GAClB6B,EAAaD,SAAO,GACpBlC,EAAekC,WACrB,IAAKlC,EAAaQ,QAAS,OACnBG,EAAY,IAAIkB,IAQtB7B,EAAaQ,gBACVvB,GAAgB,CACGsB,EAAG0B,EACHvB,EAAGyB,EACHvB,EAAGD,EACHmB,EAZP,SAACM,GACdC,0BAAe,WACbF,EAAW3B,SAAW,EACtBG,EAAU2B,QAAQ,SAACC,UAAaA,EAAS,CAACJ,EAAW3B,YACrD4B,WAqBN,OATAhD,EAA0B,WACxB6C,EAASzB,QAAUF,EACnB6B,EAAW3B,SAAW,EACtBgC,2BAAgBC,0BAAgB,WAC7BzC,EAAaQ,QAAgCvB,GAAe2B,EAAE0B,QAAQ,SAACC,GACtEA,EAAS,CAACJ,EAAW3B,QAASF,SAGjC,CAACA,IACGoB,gBAAcD,EAAc,CAAEnB,MAAON,EAAaQ,SAAWgB,YA0B9D1B,EAAgB4C,SACjB5C,oBAoIqB,SAACA,GAC7B,IAAM6C,EAAc1C,aAAeH,GACnC,GAAuB,iBAAZI,SAAiD,eAAzBA,QAAQC,IAAIC,WACxCuC,EAAY1D,GACf,UAAUoB,MAAM,2CAGpB,OAAOsC,yBAlEyB7C,GAChC,OAAOD,EAAmBC,EAASH,uDAcGG,GACtC,IAAME,EAAeC,aACnBH,GACAb,GACF,GAAuB,iBAAZiB,SAAiD,eAAzBA,QAAQC,IAAIC,WACxCJ,EACH,UAAUK,MAAM,6CAIpB,OADsBL,EAAd8B"}