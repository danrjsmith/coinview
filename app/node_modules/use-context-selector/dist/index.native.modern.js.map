{"version":3,"file":"index.native.modern.js","sources":["../src/native/index.ts"],"sourcesContent":["import {\n  ComponentType,\n  Context as ContextOrig,\n  FC,\n  MutableRefObject,\n  Provider,\n  createElement,\n  createContext as createContextOrig,\n  useContext as useContextOrig,\n  useEffect,\n  useLayoutEffect,\n  useReducer,\n  useRef,\n} from 'react';\nimport {\n  unstable_NormalPriority as NormalPriority,\n  unstable_runWithPriority as runWithPriority,\n} from 'scheduler';\n\nimport { batchedUpdates } from './batchedUpdates';\n\nconst CONTEXT_VALUE = Symbol();\nconst ORIGINAL_PROVIDER = Symbol();\n\nconst isSSR = typeof window === 'undefined'\n  || /ServerSideRendering/.test(window.navigator && window.navigator.userAgent);\n\nconst useIsomorphicLayoutEffect = isSSR ? useEffect : useLayoutEffect;\n\ntype ContextValue<Value> = {\n  [CONTEXT_VALUE]: {\n    /* \"v\"alue     */ v: MutableRefObject<Value>;\n    /* versio\"n\"   */ n: MutableRefObject<number>;\n    /* \"l\"isteners */ l: Set<(action: [number] | [number, Value]) => void>;\n    /* \"u\"pdate    */ u: <T>(thunk: () => T) => void;\n  };\n};\n\nexport interface Context<Value> {\n  Provider: ComponentType<{ value: Value }>;\n  displayName?: string;\n}\n\nconst createProvider = <Value>(\n  ProviderOrig: Provider<ContextValue<Value>>,\n): FC<{ value: Value }> => ({ value, children }) => {\n    const valueRef = useRef(value);\n    const versionRef = useRef(0);\n    const contextValue = useRef<ContextValue<Value>>();\n    if (!contextValue.current) {\n      const listeners = new Set<(action: [number] | [number, Value]) => void>();\n      const update = (thunk: () => void) => {\n        batchedUpdates(() => {\n          versionRef.current += 1;\n          listeners.forEach((listener) => listener([versionRef.current]));\n          thunk();\n        });\n      };\n      contextValue.current = {\n        [CONTEXT_VALUE]: {\n          /* \"v\"alue     */ v: valueRef,\n          /* versio\"n\"   */ n: versionRef,\n          /* \"l\"isteners */ l: listeners,\n          /* \"u\"pdate    */ u: update,\n        },\n      };\n    }\n    useIsomorphicLayoutEffect(() => {\n      valueRef.current = value;\n      versionRef.current += 1;\n      runWithPriority(NormalPriority, () => {\n        (contextValue.current as ContextValue<Value>)[CONTEXT_VALUE].l.forEach((listener) => {\n          listener([versionRef.current, value]);\n        });\n      });\n    }, [value]);\n    return createElement(ProviderOrig, { value: contextValue.current }, children);\n  };\n\nconst identity = <T>(x: T) => x;\n\n/**\n * This creates a special context for `useContextSelector`.\n *\n * @example\n * import { createContext } from 'use-context-selector';\n *\n * const PersonContext = createContext({ firstName: '', familyName: '' });\n */\nexport function createContext<Value>(defaultValue: Value) {\n  const context = createContextOrig<ContextValue<Value>>({\n    [CONTEXT_VALUE]: {\n      /* \"v\"alue     */ v: { current: defaultValue },\n      /* versio\"n\"   */ n: { current: -1 },\n      /* \"l\"isteners */ l: new Set(),\n      /* \"u\"pdate    */ u: (f) => f(),\n    },\n  });\n  (context as unknown as {\n    [ORIGINAL_PROVIDER]: Provider<ContextValue<Value>>;\n  })[ORIGINAL_PROVIDER] = context.Provider;\n  (context as unknown as Context<Value>).Provider = createProvider(context.Provider);\n  delete (context as any).Consumer; // no support for Consumer\n  return context as unknown as Context<Value>;\n}\n\n/**\n * This hook returns context selected value by selector.\n *\n * It will only accept context created by `createContext`.\n * It will trigger re-render if only the selected value is referentially changed.\n *\n * The selector should return referentially equal result for same input for better performance.\n *\n * @example\n * import { useContextSelector } from 'use-context-selector';\n *\n * const firstName = useContextSelector(PersonContext, state => state.firstName);\n */\nexport function useContextSelector<Value, Selected>(\n  context: Context<Value>,\n  selector: (value: Value) => Selected,\n) {\n  const contextValue = useContextOrig(\n    context as unknown as ContextOrig<ContextValue<Value>>,\n  )[CONTEXT_VALUE];\n  if (typeof process === 'object' && process.env.NODE_ENV !== 'production') {\n    if (!contextValue) {\n      throw new Error('useContextSelector requires special context');\n    }\n  }\n  const {\n    /* \"v\"alue     */ v: { current: value },\n    /* versio\"n\"   */ n: { current: version },\n    /* \"l\"isteners */ l: listeners,\n  } = contextValue;\n  const selected = selector(value);\n  const [state, dispatch] = useReducer((\n    prev: { value: Value; selected: Selected },\n    next: [number] | [number, Value],\n  ) => {\n    if (version < next[0]) {\n      try {\n        if (next.length === 2 && (\n          Object.is(prev.value, next[1]) || Object.is(prev.selected, selector(next[1])))\n        ) {\n          return prev; // do not update\n        }\n      } catch (e) {\n        // ignored (stale props or some other reason)\n      }\n      return { ...prev }; // schedule update\n    }\n    if (Object.is(prev.value, value) || Object.is(prev.selected, selected)) {\n      return prev; // bail out\n    }\n    return { value, selected };\n  }, { value, selected });\n  useIsomorphicLayoutEffect(() => {\n    listeners.add(dispatch);\n    return () => {\n      listeners.delete(dispatch);\n    };\n  }, [listeners]);\n  return state.selected;\n}\n\n/**\n * This hook returns the entire context value.\n * Use this instead of React.useContext for consistent behavior.\n *\n * @example\n * import { useContext } from 'use-context-selector';\n *\n * const person = useContext(PersonContext);\n */\nexport function useContext<Value>(context: Context<Value>) {\n  return useContextSelector(context, identity);\n}\n\n/**\n * This hook returns an update function that accepts a thunk function\n *\n * Use this for a function that will change a value.\n *\n * @example\n * import { useContextUpdate } from 'use-context-selector';\n *\n * const update = useContextUpdate();\n * update(() => setState(...));\n */\nexport function useContextUpdate<Value>(context: Context<Value>) {\n  const contextValue = useContextOrig(\n    context as unknown as ContextOrig<ContextValue<Value>>,\n  )[CONTEXT_VALUE];\n  if (typeof process === 'object' && process.env.NODE_ENV !== 'production') {\n    if (!contextValue) {\n      throw new Error('useContextUpdate requires special context');\n    }\n  }\n  const { u: update } = contextValue;\n  return update;\n}\n\n/**\n * This is a Provider component for bridging multiple react roots\n *\n * @example\n * const valueToBridge = useBridgeValue(PersonContext);\n * return (\n *   <Renderer>\n *     <BridgeProvider context={PersonContext} value={valueToBridge}>\n *       {children}\n *     </BridgeProvider>\n *   </Renderer>\n * );\n */\nexport const BridgeProvider: FC<{\n  context: Context<any>;\n  value: any;\n}> = ({ context, value, children }) => {\n  const { [ORIGINAL_PROVIDER]: ProviderOrig } = context as unknown as {\n    [ORIGINAL_PROVIDER]: Provider<unknown>;\n  };\n  if (typeof process === 'object' && process.env.NODE_ENV !== 'production') {\n    if (!ProviderOrig) {\n      throw new Error('BridgeProvider requires special context');\n    }\n  }\n  return createElement(ProviderOrig, { value }, children);\n};\n\n/**\n * This hook return a value for BridgeProvider\n */\nexport const useBridgeValue = (context: Context<any>) => {\n  const bridgeValue = useContextOrig(context as unknown as ContextOrig<ContextValue<unknown>>);\n  if (typeof process === 'object' && process.env.NODE_ENV !== 'production') {\n    if (!bridgeValue[CONTEXT_VALUE]) {\n      throw new Error('useBridgeValue requires special context');\n    }\n  }\n  return bridgeValue as any;\n};\n"],"names":["CONTEXT_VALUE","Symbol","ORIGINAL_PROVIDER","useIsomorphicLayoutEffect","window","test","navigator","userAgent","useEffect","useLayoutEffect","identity","x","createContext","defaultValue","context","createContextOrig","[object Object]","v","current","n","l","Set","u","f","ProviderOrig","Provider","value","children","valueRef","useRef","versionRef","contextValue","listeners","update","thunk","batchedUpdates","forEach","listener","runWithPriority","NormalPriority","createElement","Consumer","useContextSelector","selector","useContextOrig","process","env","NODE_ENV","Error","version","selected","state","dispatch","useReducer","prev","next","length","Object","is","e","add","delete","useContext","useContextUpdate","BridgeProvider","useBridgeValue","bridgeValue"],"mappings":"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"}