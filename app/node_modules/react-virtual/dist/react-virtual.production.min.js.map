{"version":3,"file":"react-virtual.production.min.js","sources":["../node_modules/@reach/observe-rect/dist/observe-rect.esm.js","../src/useIsomorphicLayoutEffect.js","../src/useRect.js","../src/index.js"],"sourcesContent":["var props = ['bottom', 'height', 'left', 'right', 'top', 'width'];\n\nvar rectChanged = function rectChanged(a, b) {\n  if (a === void 0) {\n    a = {};\n  }\n\n  if (b === void 0) {\n    b = {};\n  }\n\n  return props.some(function (prop) {\n    return a[prop] !== b[prop];\n  });\n};\n\nvar observedNodes =\n/*#__PURE__*/\nnew Map();\nvar rafId;\n\nvar run = function run() {\n  var changedStates = [];\n  observedNodes.forEach(function (state, node) {\n    var newRect = node.getBoundingClientRect();\n\n    if (rectChanged(newRect, state.rect)) {\n      state.rect = newRect;\n      changedStates.push(state);\n    }\n  });\n  changedStates.forEach(function (state) {\n    state.callbacks.forEach(function (cb) {\n      return cb(state.rect);\n    });\n  });\n  rafId = window.requestAnimationFrame(run);\n};\n\nfunction observeRect(node, cb) {\n  return {\n    observe: function observe() {\n      var wasEmpty = observedNodes.size === 0;\n\n      if (observedNodes.has(node)) {\n        observedNodes.get(node).callbacks.push(cb);\n      } else {\n        observedNodes.set(node, {\n          rect: undefined,\n          hasRectChanged: false,\n          callbacks: [cb]\n        });\n      }\n\n      if (wasEmpty) run();\n    },\n    unobserve: function unobserve() {\n      var state = observedNodes.get(node);\n\n      if (state) {\n        // Remove the callback\n        var index = state.callbacks.indexOf(cb);\n        if (index >= 0) state.callbacks.splice(index, 1); // Remove the node reference\n\n        if (!state.callbacks.length) observedNodes[\"delete\"](node); // Stop the loop\n\n        if (!observedNodes.size) cancelAnimationFrame(rafId);\n      }\n    }\n  };\n}\n\nexport default observeRect;\n//# sourceMappingURL=observe-rect.esm.js.map\n","import React from 'react'\n\nexport default typeof window !== 'undefined'\n  ? React.useLayoutEffect\n  : React.useEffect\n","import React from 'react'\nimport observeRect from '@reach/observe-rect'\nimport useIsomorphicLayoutEffect from './useIsomorphicLayoutEffect'\n\nexport default function useRect(\n  nodeRef,\n  initialRect = { width: 0, height: 0 }\n) {\n  const [element, setElement] = React.useState(nodeRef.current)\n  const [rect, dispatch] = React.useReducer(rectReducer, initialRect)\n  const initialRectSet = React.useRef(false)\n\n  useIsomorphicLayoutEffect(() => {\n    if (nodeRef.current !== element) {\n      setElement(nodeRef.current)\n    }\n  })\n\n  useIsomorphicLayoutEffect(() => {\n    if (element && !initialRectSet.current) {\n      initialRectSet.current = true\n      const rect = element.getBoundingClientRect()\n      dispatch({ rect })\n    }\n  }, [element])\n\n  React.useEffect(() => {\n    if (!element) {\n      return\n    }\n\n    const observer = observeRect(element, rect => {\n      dispatch({ rect })\n    })\n\n    observer.observe()\n\n    return () => {\n      observer.unobserve()\n    }\n  }, [element])\n\n  return rect\n}\n\nfunction rectReducer(state, action) {\n  const rect = action.rect\n  if (state.height !== rect.height || state.width !== rect.width) {\n    return rect\n  }\n  return state\n}\n","import React from 'react'\nimport useRect from './useRect'\nimport useIsomorphicLayoutEffect from './useIsomorphicLayoutEffect'\n\nconst defaultEstimateSize = () => 50\n\nconst defaultKeyExtractor = index => index\n\nconst defaultMeasureSize = (el, horizontal) => {\n  const key = horizontal ? 'offsetWidth' : 'offsetHeight'\n\n  return el[key]\n}\n\nexport const defaultRangeExtractor = range => {\n  const start = Math.max(range.start - range.overscan, 0)\n  const end = Math.min(range.end + range.overscan, range.size - 1)\n\n  const arr = []\n\n  for (let i = start; i <= end; i++) {\n    arr.push(i)\n  }\n\n  return arr\n}\n\nexport const useElementScroll = ({\n  parentRef,\n  horizontal,\n  useObserver,\n  initialRect,\n}) => {\n  const scrollKey = horizontal ? 'scrollLeft' : 'scrollTop'\n  const [scrollOffset, setScrollOffset] = React.useState(0)\n  const [element, setElement] = React.useState(parentRef.current)\n\n  useIsomorphicLayoutEffect(() => {\n    setElement(parentRef.current)\n  })\n\n  useIsomorphicLayoutEffect(() => {\n    if (!element) {\n      setScrollOffset(0)\n\n      return\n    }\n\n    const onScroll = () => {\n      setScrollOffset(element[scrollKey])\n    }\n\n    onScroll()\n\n    element.addEventListener('scroll', onScroll, {\n      capture: false,\n      passive: true,\n    })\n\n    return () => {\n      element.removeEventListener('scroll', onScroll)\n    }\n  }, [element, scrollKey])\n\n  const scrollToFn = React.useCallback(\n    offset => {\n      if (parentRef.current) {\n        parentRef.current[scrollKey] = offset\n      }\n    },\n    [parentRef, scrollKey]\n  )\n\n  const useMeasureParent = useObserver || useRect\n\n  const sizeKey = horizontal ? 'width' : 'height'\n\n  const { [sizeKey]: outerSize } = useMeasureParent(parentRef, initialRect)\n\n  return {\n    outerSize,\n    scrollOffset,\n    scrollToFn,\n  }\n}\n\nconst useWindowRect = (windowRef, initialRect = { width: 0, height: 0 }) => {\n  const [rect, setRect] = React.useState(initialRect)\n  const [element, setElement] = React.useState(windowRef.current)\n\n  useIsomorphicLayoutEffect(() => {\n    setElement(windowRef.current)\n  })\n\n  useIsomorphicLayoutEffect(() => {\n    if (!element) {\n      return\n    }\n\n    function resizeHandler() {\n      const next = {\n        width: element.innerWidth,\n        height: element.innerHeight,\n      }\n\n      setRect(prev =>\n        prev.height !== next.height || prev.width !== next.width ? next : prev\n      )\n    }\n    resizeHandler()\n\n    element.addEventListener('resize', resizeHandler)\n\n    return () => {\n      element.removeEventListener('resize', resizeHandler)\n    }\n  }, [element])\n\n  return rect\n}\n\nexport const useWindowScroll = ({\n  windowRef,\n  parentRef,\n  horizontal,\n  useWindowObserver,\n  initialRect,\n}) => {\n  const [scrollOffset, setScrollOffset] = React.useState(0)\n  const [element, setElement] = React.useState(windowRef.current)\n\n  const parentOffsetRef = React.useRef(0)\n\n  const rectKey = horizontal ? 'left' : 'top'\n  const scrollKey = horizontal ? 'scrollX' : 'scrollY'\n\n  useIsomorphicLayoutEffect(() => {\n    setElement(windowRef.current)\n  })\n\n  useIsomorphicLayoutEffect(() => {\n    if (!element) {\n      parentOffsetRef.current = 0\n      setScrollOffset(0)\n\n      return\n    }\n\n    if (parentRef.current) {\n      parentOffsetRef.current =\n        element[scrollKey] + parentRef.current.getBoundingClientRect()[rectKey]\n    }\n\n    const onScroll = () => {\n      const offset = element[scrollKey] - parentOffsetRef.current\n      setScrollOffset(offset)\n    }\n\n    onScroll()\n\n    element.addEventListener('scroll', onScroll, {\n      capture: false,\n      passive: true,\n    })\n\n    return () => {\n      element.removeEventListener('scroll', onScroll)\n    }\n  }, [element, scrollKey, rectKey, parentRef])\n\n  const scrollToFn = React.useCallback(\n    (offset, reason) => {\n      if (windowRef.current) {\n        const delta = ['ToIndex', 'SizeChanged'].includes(reason)\n          ? parentOffsetRef.current\n          : 0\n\n        windowRef.current.scrollTo({ [rectKey]: offset + delta })\n      }\n    },\n    [windowRef, rectKey]\n  )\n\n  const useMeasureParent = useWindowObserver || useWindowRect\n\n  const sizeKey = horizontal ? 'width' : 'height'\n\n  const { [sizeKey]: outerSize } = useMeasureParent(windowRef, initialRect)\n\n  return {\n    outerSize,\n    scrollOffset,\n    scrollToFn,\n  }\n}\n\nexport const useDefaultScroll = props => {\n  const { parentRef, windowRef } = props\n\n  const useWindow = windowRef !== undefined\n\n  const emptyRef = React.useRef(null)\n\n  const elementRes = useElementScroll({\n    ...props,\n    parentRef: useWindow ? emptyRef : parentRef,\n  })\n\n  const windowRes = useWindowScroll({\n    ...props,\n    windowRef: useWindow ? windowRef : emptyRef,\n  })\n\n  return useWindow ? windowRes : elementRes\n}\n\nexport function useVirtual({\n  size = 0,\n  estimateSize = defaultEstimateSize,\n  overscan = 1,\n  paddingStart = 0,\n  paddingEnd = 0,\n  parentRef,\n  windowRef,\n  horizontal,\n  scrollToFn,\n  useObserver,\n  useWindowObserver,\n  initialRect,\n  keyExtractor = defaultKeyExtractor,\n  measureSize = defaultMeasureSize,\n  rangeExtractor = defaultRangeExtractor,\n  useScroll = useDefaultScroll,\n}) {\n  const latestRef = React.useRef({\n    scrollOffset: 0,\n    measurements: [],\n  })\n\n  const { outerSize, scrollOffset, scrollToFn: defaultScrollToFn } = useScroll({\n    windowRef,\n    parentRef,\n    horizontal,\n    useObserver,\n    useWindowObserver,\n    initialRect,\n  })\n\n  const scrollOffsetWithAdjustmentsRef = React.useRef(scrollOffset)\n  if (latestRef.current.scrollOffset !== scrollOffset) {\n    scrollOffsetWithAdjustmentsRef.current = scrollOffset\n  }\n\n  latestRef.current.outerSize = outerSize\n  latestRef.current.scrollOffset = scrollOffset\n\n  const scrollTo = React.useCallback(\n    (offset, reason) => {\n      const resolvedScrollToFn =\n        scrollToFn || (offset => defaultScrollToFn(offset, reason))\n\n      resolvedScrollToFn(offset, defaultScrollToFn)\n    },\n    [scrollToFn, defaultScrollToFn]\n  )\n\n  const [measuredCache, setMeasuredCache] = React.useState({})\n\n  const measure = React.useCallback(() => setMeasuredCache({}), [])\n\n  const pendingMeasuredCacheIndexesRef = React.useRef([])\n\n  const measurements = React.useMemo(() => {\n    const min =\n      pendingMeasuredCacheIndexesRef.current.length > 0\n        ? Math.min(...pendingMeasuredCacheIndexesRef.current)\n        : 0\n    pendingMeasuredCacheIndexesRef.current = []\n\n    const measurements = latestRef.current.measurements.slice(0, min)\n\n    for (let i = min; i < size; i++) {\n      const key = keyExtractor(i)\n      const measuredSize = measuredCache[key]\n      const start = measurements[i - 1] ? measurements[i - 1].end : paddingStart\n      const size =\n        typeof measuredSize === 'number' ? measuredSize : estimateSize(i)\n      const end = start + size\n      measurements[i] = { index: i, start, size, end, key }\n    }\n    return measurements\n  }, [estimateSize, measuredCache, paddingStart, size, keyExtractor])\n\n  const totalSize = (measurements[size - 1]?.end || 0) + paddingEnd\n\n  latestRef.current.measurements = measurements\n  latestRef.current.totalSize = totalSize\n\n  const { start, end } = calculateRange(latestRef.current)\n\n  const indexes = React.useMemo(\n    () =>\n      rangeExtractor({\n        start,\n        end,\n        overscan,\n        size: measurements.length,\n      }),\n    [start, end, overscan, measurements.length, rangeExtractor]\n  )\n\n  const measureSizeRef = React.useRef(measureSize)\n  measureSizeRef.current = measureSize\n\n  const virtualItems = React.useMemo(() => {\n    const virtualItems = []\n\n    for (let k = 0, len = indexes.length; k < len; k++) {\n      const i = indexes[k]\n      const measurement = measurements[i]\n\n      const item = {\n        ...measurement,\n        measureRef: el => {\n          if (el) {\n            const measuredSize = measureSizeRef.current(el, horizontal)\n\n            if (measuredSize !== item.size) {\n              const { scrollOffset } = latestRef.current\n\n              if (item.start < scrollOffset) {\n                const delta = measuredSize - item.size\n                scrollOffsetWithAdjustmentsRef.current += delta\n\n                defaultScrollToFn(\n                  scrollOffsetWithAdjustmentsRef.current,\n                  'SizeChanged'\n                )\n              }\n\n              pendingMeasuredCacheIndexesRef.current.push(i)\n\n              setMeasuredCache(old => ({\n                ...old,\n                [item.key]: measuredSize,\n              }))\n            }\n          }\n        },\n      }\n\n      virtualItems.push(item)\n    }\n\n    return virtualItems\n  }, [indexes, defaultScrollToFn, horizontal, measurements])\n\n  const mountedRef = React.useRef(false)\n\n  useIsomorphicLayoutEffect(() => {\n    if (mountedRef.current) {\n      setMeasuredCache({})\n    }\n    mountedRef.current = true\n  }, [estimateSize])\n\n  const scrollToOffset = React.useCallback(\n    (toOffset, { align = 'start' } = {}, reason = 'ToOffset') => {\n      const { scrollOffset, outerSize } = latestRef.current\n\n      if (align === 'auto') {\n        if (toOffset <= scrollOffset) {\n          align = 'start'\n        } else if (toOffset >= scrollOffset + outerSize) {\n          align = 'end'\n        } else {\n          align = 'start'\n        }\n      }\n\n      if (align === 'start') {\n        scrollTo(toOffset, reason)\n      } else if (align === 'end') {\n        scrollTo(toOffset - outerSize, reason)\n      } else if (align === 'center') {\n        scrollTo(toOffset - outerSize / 2, reason)\n      }\n    },\n    [scrollTo]\n  )\n\n  const tryScrollToIndex = React.useCallback(\n    (index, { align = 'auto', ...rest } = {}) => {\n      const { measurements, scrollOffset, outerSize } = latestRef.current\n\n      const measurement = measurements[Math.max(0, Math.min(index, size - 1))]\n\n      if (!measurement) {\n        return\n      }\n\n      if (align === 'auto') {\n        if (measurement.end >= scrollOffset + outerSize) {\n          align = 'end'\n        } else if (measurement.start <= scrollOffset) {\n          align = 'start'\n        } else {\n          return\n        }\n      }\n\n      const toOffset =\n        align === 'center'\n          ? measurement.start + measurement.size / 2\n          : align === 'end'\n          ? measurement.end\n          : measurement.start\n\n      scrollToOffset(toOffset, { align, ...rest }, 'ToIndex')\n    },\n    [scrollToOffset, size]\n  )\n\n  const scrollToIndex = React.useCallback(\n    (...args) => {\n      // We do a double request here because of\n      // dynamic sizes which can cause offset shift\n      // and end up in the wrong spot. Unfortunately,\n      // we can't know about those dynamic sizes until\n      // we try and render them. So double down!\n      tryScrollToIndex(...args)\n      requestAnimationFrame(() => {\n        tryScrollToIndex(...args)\n      })\n    },\n    [tryScrollToIndex]\n  )\n\n  return {\n    virtualItems,\n    totalSize,\n    scrollToOffset,\n    scrollToIndex,\n    measure,\n  }\n}\n\nconst findNearestBinarySearch = (low, high, getCurrentValue, value) => {\n  while (low <= high) {\n    let middle = ((low + high) / 2) | 0\n    let currentValue = getCurrentValue(middle)\n\n    if (currentValue < value) {\n      low = middle + 1\n    } else if (currentValue > value) {\n      high = middle - 1\n    } else {\n      return middle\n    }\n  }\n\n  if (low > 0) {\n    return low - 1\n  } else {\n    return 0\n  }\n}\n\nfunction calculateRange({ measurements, outerSize, scrollOffset }) {\n  const size = measurements.length - 1\n  const getOffset = index => measurements[index].start\n\n  let start = findNearestBinarySearch(0, size, getOffset, scrollOffset)\n  let end = start\n\n  while (end < size && measurements[end].end < scrollOffset + outerSize) {\n    end++\n  }\n\n  return { start, end }\n}\n"],"names":["rafId","props","observedNodes","Map","run","changedStates","state","node","a","b","newRect","getBoundingClientRect","rect","some","prop","cb","window","React","useLayoutEffect","useEffect","useRect","nodeRef","initialRect","width","height","useState","current","element","setElement","useReducer","rectReducer","dispatch","initialRectSet","useRef","useIsomorphicLayoutEffect","observer","observe","wasEmpty","undefined","hasRectChanged","callbacks","unobserve","index","length","size","cancelAnimationFrame","action","defaultEstimateSize","defaultKeyExtractor","defaultMeasureSize","el","horizontal","defaultRangeExtractor","range","start","Math","max","overscan","end","min","arr","i","push","useElementScroll","parentRef","useObserver","scrollKey","scrollOffset","setScrollOffset","onScroll","addEventListener","capture","passive","removeEventListener","scrollToFn","useCallback","offset","sizeKey","outerSize","useWindowRect","windowRef","setRect","resizeHandler","next","innerWidth","innerHeight","prev","useWindowScroll","useWindowObserver","parentOffsetRef","rectKey","reason","delta","includes","scrollTo","useDefaultScroll","useWindow","emptyRef","elementRes","windowRes","estimateSize","paddingStart","paddingEnd","keyExtractor","measureSize","rangeExtractor","useScroll","latestRef","measurements","defaultScrollToFn","scrollOffsetWithAdjustmentsRef","measuredCache","setMeasuredCache","measure","pendingMeasuredCacheIndexesRef","useMemo","slice","key","measuredSize","totalSize","low","high","getCurrentValue","value","middle","currentValue","findNearestBinarySearch","calculateRange","indexes","measureSizeRef","virtualItems","k","len","item","measureRef","old","mountedRef","scrollToOffset","toOffset","align","tryScrollToIndex","rest","measurement","scrollToIndex","args","requestAnimationFrame"],"mappings":"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"}